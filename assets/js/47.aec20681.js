(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{733:function(t,s,a){"use strict";a.r(s);var r=a(15),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构-二叉树的基本实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-二叉树的基本实现"}},[t._v("#")]),t._v(" 数据结构-二叉树的基本实现")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/HerryLo",target:"_blank",rel:"noopener noreferrer"}},[t._v("作者：HerryLo"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("我学习数据结构之余总结的第三篇文章，力求不概念化，文字通俗易懂。主要会说到三种二叉树：一般二叉树、满二叉树、完全二叉树。如果这些你都知道下面的文章可以不用看。")]),t._v(" "),a("h2",{attrs:{id:"一般二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般二叉树"}},[t._v("#")]),t._v(" 一般二叉树")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Img/WechatIMG454.png",alt:""}})]),t._v(" "),a("p",[t._v("图中左边是"),a("strong",[t._v("普通树")]),t._v("(左边只是一般树)，具备树的结构。而右边是才是"),a("strong",[t._v("一般二叉树")]),t._v("，上面这幅图是将一颗"),a("strong",[t._v("普通树")]),t._v("转换为一颗"),a("strong",[t._v("一般二叉树")]),t._v("，转化的具体规则是：节点的左指针域指向它的第一个孩子节点，右指针指向它的兄弟节点，只要满足此条件，就可以把普通树转换为一般二叉树。")]),t._v(" "),a("p",[t._v("从图中的一般二叉树我们可以得到一些东西，二叉树只有一个根节点，当然这是树的共同点，但是可以看到，"),a("strong",[t._v("二叉树任意一个子节点个数最多只有两个")]),t._v("，如果超过，它就不是一颗二叉树了，而是普通树。")]),t._v(" "),a("p",[t._v("下面是每个节点的基本结构:")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" ElemType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个子树的基本结构struct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BinNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ElemType data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BinNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLeft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左子树")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BinNode")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pRight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右子树")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("BinNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("BinTree\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"满二叉树和完全二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#满二叉树和完全二叉树"}},[t._v("#")]),t._v(" 满二叉树和完全二叉树")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Img/WechatIMG453.png",alt:""}})]),t._v(" "),a("p",[t._v("满二叉树：在不增加树的层数的前提下，无法再多添加一个节点的二叉树就是满二叉树")]),t._v(" "),a("p",[t._v("完全二叉树：如果只是删除满二叉树最右边的连续若干节点，这样形成的二叉树就是完全二叉树；")]),t._v(" "),a("p",[t._v("生成二叉树的代码参考链接："),a("a",{attrs:{href:"https://github.com/HerryLo/CStruct/blob/master/tree/main.c",target:"_blank",rel:"noopener noreferrer"}},[t._v("tree 创建和遍历"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("更多内容可以参考我个人学习项目"),a("a",{attrs:{href:"https://github.com/HerryLo/CStruct",target:"_blank",rel:"noopener noreferrer"}},[t._v("C语言数据结构"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("ps")]),t._v(": 微信公众号：Yopai，有兴趣的可以关注，每周不定期更新。不断分享，不断进步")]),t._v(" "),a("p",[a("img",{attrs:{src:"/webChat1.png",alt:""}})])])}),[],!1,null,null,null);s.default=e.exports}}]);